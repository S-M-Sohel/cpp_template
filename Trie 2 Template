"": {
  "prefix": "trie 2",
  "body": [
    "class Node {",
    "public:",
    "Node* links[26];",
    "bool flag = false;",
    "int prefixCount = 0;",
    "int wordCount = 0;",
    "Node() {",
    "for (int i = 0; i < 26; i++){links[i] = nullptr; }}",
    "bool containsKey(char c) {",
    "return links[c - 'a'] != nullptr;}void put(char c, Node* node){links[c - 'a'] = node;}",
    "Node* get(char c) {",
    "return links[c - 'a'];}",
    "void increasePrefix() {",
    "prefixCount++;",
    "}",
    "int getPrefixCount() {",
    "return prefixCount;",
    "}",
    "void increaseWordCount() {",
    "wordCount++;",
    "}",
    "int getWordCount() {",
    "return wordCount;",
    "}",
    "void setEnd() {",
    "flag = true;",
    "}",
    "bool isEnd() {",
    "return flag;",
    "}",
    "};",
    "class Trie {",
    "Node* root;",
    "public:",
    "Trie() { root = new Node();}void insert(const string& word){Node* node = root;",
    "for (char c : word) {if (!node->containsKey(c)){node->put(c,newNode());}",
    "node = node->get(c);node->increasePrefix();}",
    "node->setEnd();",
    "node->increaseWordCount();}",
    "bool search(const string& word) {",
    "Node* node = root;",
    "for (char c : word) {",
    "if (!node->containsKey(c)) {",
    "return false;",
    "}",
    "node = node->get(c);",
    "}",
    "return node->isEnd();}",
    "bool startsWith(const string& prefix) {",
    "Node* node = root;",
    "for (char c : prefix) {",
    "if (!node->containsKey(c)) {",
    "return false;",
    "}",
    "node = node->get(c);",
    "}",
    "return true;}",
    "int countWordsEqualTo(const string& word) {",
    "Node* node = root;",
    "for (char c : word) {",
    "if (!node->containsKey(c)) {",
    "return 0; }",
    "node = node->get(c); }",
    "return node->getWordCount();",
    "}",
    "int countWordsStartingWith(const string& prefix)",
    "{",
    "Node* node = root;",
    "for (char c : prefix) {",
    "if (!node->containsKey(c)) {",
    "return 0;",
    "}",
    "node = node->get(c);",
    "}",
    "return node->getPrefixCount(); }",
    "};"
  ],
  "description": ""
}
